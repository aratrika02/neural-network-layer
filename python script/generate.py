# -*- coding: utf-8 -*-
"""generate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u0OJG1SKVJzyGdpUNx9Y-1E-LZViQVZl
"""

import numpy as np
import os

def generate_data(size, low, high):
    return np.round(np.random.uniform(low, high, size), 3)

# Function to convert a value to 16-bit fixed-point binary format
def to_fixed_point(value):
    fixed_point = int(value * 256)  # Scale by 2^8
    if fixed_point < 0:
        fixed_point = (1 << 16) + fixed_point
    return f"{fixed_point:016b}"

def save_to_mem(file_name, data):
    with open(file_name, "w") as file:
        for value in data:
            file.write(f"{to_fixed_point(value)}\n")

output_dir = "mem_files"
os.makedirs(output_dir, exist_ok=True)

for i in range(0, 10):
    weights = generate_data(8, -8.5, 8.5) #range from -8.5 to 8.5 has been chosen arbitrarily
    inputs = generate_data(8,-8.5, 8.5) #range from -8.5 to 8.5 has been chosen arbitrarily

    weights_file = os.path.join(output_dir, f"weights_{i}.mem")
    inputs_file = os.path.join(output_dir, f"inputs_{i}.mem")

    save_to_mem(weights_file, weights)
    save_to_mem(inputs_file, inputs)

    print(f"File Pair {i}:")
    print(f"Weights (Decimal): {weights}")
    print(f"Inputs (Decimal): {inputs}")